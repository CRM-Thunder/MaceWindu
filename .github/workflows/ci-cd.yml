name: Django CI/CD
permissions:
  contents: read
  actions: read
  security-events: write
on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  build:
    name: Build & Test Django
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          cd MaceWindu
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "DB_NAME=${{secrets.DB_NAME}}" >> .env
          echo "DB_USER=${{secrets.DB_USER}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
          echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
          echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
          echo "EMAIL_HOST=${{secrets.EMAIL_HOST}}" >> .env
          echo "EMAIL_PORT=${{secrets.EMAIL_PORT}}" >> .env
          echo "EMAIL_HOST_USER=${{secrets.EMAIL_HOST_USER}}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{secrets.EMAIL_HOST_PASSWORD}}" >> .env
          echo "GOOGLE_WEATHER_API_KEY=${{secrets.GOOGLE_WEATHER_API_KEY}}" >> .env

#============pip-audit (SCA)================
  sca-scan:
    name: pip-audit (SCA)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run pip-audit (SCA)
        run: |
          pip install pip-audit
          pip install -r requirements.txt
          pip-audit --format json > pip-audit.json

      - name: Upload pip-audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json
          retention-days: 5

#============Semgrep (SAST)================
  semgrep-scan:
    name: Semgrep (SAST)
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Semgrep
        run: |
          pip install semgrep
          cd MaceWindu
          semgrep --config auto --sarif > semgrep.sarif

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: MaceWindu/semgrep.sarif

#============flake8 (linter)================
  linter:
    name: flake8 (Linter)
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Run flake8
        run: |
          pip install flake8 flake8-json
          pip install -r requirements.txt
          flake8 MaceWindu/ --ignore=E501 --statistics --count --format=json-pretty > flake8-report.json

      - name: Upload flake8 report
        uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: flake8-report.json
          retention-days: 5